#!/bin/sh -x
# vim: set foldmethod=marker :

exec 2> /home/debian/setup-log
HOSTNAME="$1"
FAST="$2"
WIJNEN="$3"
read DATE

if [ "$WIJNEN" ] ; then
	echo "$WIJNEN	wijnen.dtdns.net" >> /etc/hosts
fi

# Only run on beaglebone. {{{
if [ `dpkg --print-architecture` != armhf ] ; then
	echo >&2 "This script should not run on the host.  Run upload instead"
	exit 1
fi
# }}}

DEBIAN_FRONTEND=noninteractive
export DEBIAN_FRONTEND

date --set "$DATE"

# Disable kernel log on /dev/ttyO0. {{{
if [ -f /boot/uboot/uEnv.txt ] ; then
	sed -i -e 's/console=${console} //' /boot/uboot/uEnv.txt
elif [ -f /boot/uEnv.txt ] ; then
	if ! grep -q console /boot/uEnv.txt ; then
		echo 'console=ttyO2,115200n8' >> /boot/uEnv.txt
	fi
else
	echo >&2 'No uEnv.txt found!'
fi
# }}}

# Set up eth0. {{{
sed -i -re 's/wired_interface = .*$/wired_interface = None/' /etc/wicd/manager-settings.conf
sed -i -re '/\s*(network|gateway)\s/d' /etc/network/interfaces
if ! grep -q '^iface eth0' /etc/network/interfaces ; then
	cat >>/etc/network/interfaces <<EOF
allow-hotplug usb0
auto usb0

allow-hotplug eth0
auto eth0
iface eth0 inet static
	address 192.168.76.2
	netmask 255.255.255.0
EOF
fi

# }}}

# Set the default route through USB while this script is running. {{{
IP=`ip route | grep usb0 | grep / | cut -f1 -d/`
ip route replace default via ${IP%.*}.1
# }}}

# Set up nameserver. {{{
echo 'nameserver 8.8.8.8' > /etc/resolv.conf
# }}}q

# Allow printer user to use sudo. {{{
echo 'franklin3d ALL=NOPASSWD:ALL' > /etc/sudoers.d/franklin
# }}}

if [ "$FAST" = false ] ; then
# Remove junk. {{{
	rm -f /etc/init.d/led_aging.sh
	apt-get -y remove --purge x11-common
	apt-get -y remove --purge udhcpd
	apt-get -y autoremove
# }}}

# Move files to their proper location. {{{
	cp /tmp/upgrade.gpg /root/
	cp -r /tmp/Repetier-Server /var/lib/
# }}}

# Set hostname. {{{
	if grep -q 'beaglebone' /etc/hosts ; then
		echo $HOSTNAME > /etc/hostname
		sed -i -e "s/^.*beaglebone.*$/127.0.1.1	$HOSTNAME/" /etc/hosts
	fi
# }}}

# Add Franklin's repository to sources.list. {{{
	cat > /etc/apt/sources.list.d/franklin.list <<EOF
deb http://wijnen.dtdns.net/archive wheezy/all/
deb http://wijnen.dtdns.net/archive wheezy/armhf/
EOF
# }}}

# Upgrade system. {{{
	sed -i -e 's/ftp.us.debian.org/lug.mtu.edu/g' /etc/apt/sources.list
	apt-get -y update
	apt-get --force-yes -y upgrade
	apt-get clean
# }}}

# Install new packages. {{{
	apt-get -y install --force-yes --allow-unauthenticated wijnen-archive-keyring
	apt-get -y update
	apt-get -y install --force-yes python3 dnsmasq apache2 avrdude
	systemctl enable apache2.service
	dpkg -i /tmp/Repetier-Server-0.60.4-Linux.deb
	rm -f /etc/default/franklin
	apt-get -y install --force-yes franklin
# }}}
fi

# Disable login on /dev/ttyO0. {{{
systemctl mask serial-getty@ttyO0.service
# }}}

# Set up Franklin. {{{
cat > /etc/default/franklin <<EOF
AUTODETECT=False
TEXIT='sudo shutdown -h now'
TLS=False
EOF
# }}}

# Set up dnsmasq. {{{
if [ -f /etc/dnsmasq.conf ] ; then
	sed -i -e '/^dhcp-range=/d' /etc/dnsmasq.conf
	echo 'dhcp-range=192.168.76.3,192.168.76.200,12h' >> /etc/dnsmasq.conf
	echo 'dhcp-range=192.168.7.1,192.168.7.1,10m' >> /etc/dnsmasq.conf
	if ! grep -q '^dhcp-option=3' /etc/dnsmasq.conf ; then
		echo 'dhcp-option=3' >> /etc/dnsmasq.conf
	fi
	if ! grep -q '^dhcp-option=6' /etc/dnsmasq.conf ; then
		echo 'dhcp-option=6' >> /etc/dnsmasq.conf
	fi
fi
# }}}

# Set up auto-upgrade from usb storage. {{{
cat > /etc/rc.local <<EOF
#!/bin/sh
ip route replace default via 192.168.7.1
sleep 10
if [ -b /dev/sda1 ] ; then
	if mount /dev/sda1 /mnt ; then
		for i in /mnt/*.sig ; do
			target="\${i%.sig}"
			if ! [ -f "\$i" ] ; then continue ; fi
			if ! [ -f "\$target" ] ; then continue ; fi
			if gpg --ignore-time-conflict --keyring /root/upgrade.gpg --no-default-keyring --verify "\$i" "\$target" ; then
				if [ "\${target%.deb}" != "\$target" ] ; then
					dpkg -i "\$target"
					apt-get install -f
				else
					cp "\$target" /tmp/script
					chmod a+x /tmp/script
					/tmp/script
				fi
			fi
		done
		umount /mnt
	fi
fi
EOF
chmod a+x /etc/rc.local
# }}}

# Allow shutdown through web site. {{{
SUDOER=/etc/sudoers.d/athena-shutdown
echo 'www-data ALL=(root)NOPASSWD:/sbin/shutdown' > "$SUDOER"
chmod 0440 "$SUDOER"

cat > /usr/lib/cgi-bin/shutdown << EOF
#!/usr/bin/python3

import cgi
import os
import socket

f = cgi.FieldStorage()
hostname = socket.getfqdn()

if f.getfirst('halt'):
	os.system('sudo shutdown -h now')
	print('Content-Type: text/html;charset=utf8')
	print('')
	print('''\
<!DOCTYPE html>
<html>
	<head>
		<title>Shutting Down %s</title>
	</head>
	<body>
		<h1>Shutting Down %s</h1>
	</body>
</html>
''' % (hostname, hostname))
else:
	print('Content-Type: text/html;charset=utf8')
	print('')
	print('''\
<!DOCTYPE html>
<html>
	<head>
		<title>Shut Down %s?</title>
	</head>
	<body>
		<h1>Shut Down %s?</title>
		<form>
			<input type='hidden' name='halt' value='halt'/>
			<input type='submit' name='submit' value='Shut Down %s'/>
		</form>
	</body>
</html>
''' % (hostname, hostname, hostname))
EOF

chmod a+x /usr/lib/cgi-bin/shutdown
# }}}

# Set passwords. {{{
chpasswd <<EOF
root:reprap
debian:reprap
EOF
sed -i -e 's/^PermitRootLogin .*$/PermitRootLogin no/' /etc/ssh/sshd_config
# }}}

sed -i -e '/wijnen.dtdns.net/d' /etc/hosts

cat /etc/hostname

# Shut down. {{{
shutdown -h now
# }}}
